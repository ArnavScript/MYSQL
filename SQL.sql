CREATE DATABASE ORG;
SHOW DATABASES;
USE ORG;

CREATE TABLE WORKER(
 WORKER_ID INT PRIMARY KEY AUTO_INCREMENT,
 FIRST_NAME CHAR(25),
 LAST_NAME CHAR(25),
 SALARY INT(15),
 CONSTRAINT CHECK_SALARY CHECK(SALARY >50000),
 JOINING_DATE DATETIME,
 DEPARTMENT CHAR(25)
);

INSERT INTO WORKER
       (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
       (001,'ARNAV', 'VARSHNEY',100000,'11-01-25 09.00.00','IT'),
       (002, 'PRIYA', 'SHARMA', 85000, '11-01-25 09:02:15', 'HR'),
	   (003, 'VIKRAM', 'SINGH', 120000, '11-01-25 09:05:40', 'FINANCE'),
	   (004, 'ANJALI', 'MEHRA', 95000, '11-01-25 09:15:22', 'IT'),
       (005, 'KARAN', 'PATEL', 75000, '11-01-25 09:20:01', 'SUPPORT'),
	   (006, 'Sneha', 'Kapoor', 110000, '11-01-25 09:25:57', 'SALES'),
	   (007, 'AMIT', 'KRISHNA', 80000, '11-01-25 09:30:10', 'HR'),
       (008, 'ISHA', 'BANERJEE', 130000, '11-01-25 09:35:44', 'R&D'),
       (009, 'RAHUL', 'GUPTA', 70000, '11-01-25 09:40:30', 'SUPPORT'),
       (010, 'NANDINI', 'REDDY', 105000, '11-01-25 09:55:18', 'FINANCE');


CREATE TABLE BONUS(
  WORKER_REF_ID INT,
  BONUS_AMOUNT INT(10),
  BONUS_DATE DATETIME,
  FOREIGN KEY (WORKER_REF_ID)
       REFERENCES WORKER(WORKER_ID)
       ON DELETE CASCADE
);

INSERT INTO BONUS
      (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
      (001, 5000, '16-02-20'),
      (002, 4000, '16-06-11'),
      (003, 6000, '16-02-20'),
      (001, 3500, '16-02-20'),
	  (002, 4200, '16-11-11');

CREATE TABLE TITLE(
  WORKER_REF_ID INT,
  WORKER_TITLE CHAR(25),
  AFFECTED_FROM DATETIME,
  FOREIGN KEY (WORKER_REF_ID)
       REFERENCES WORKER(WORKER_ID)
       ON DELETE CASCADE
);

INSERT INTO TITLE
    (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
    (001, 'Manager', '2025-01-11 09:00:00'),
    (002, 'HR Executive', '2025-01-11 09:02:15'),
    (008, 'Finance Head', '2025-01-11 09:05:40'),
    (005, 'Sales Lead', '2025-01-11 09:25:57'),
    (004, 'Research Scientist', '2025-01-11 09:35:44'),
    (007, 'Developer', '2025-01-11 09:15:22'),
    (006, 'Analyst', '2025-01-11 09:55:18'),
    (003, 'Recruiter', '2025-01-11 09:30:10'); 



-- 1. DDL/DQL COMMANDS

-- SELECT WITH FROM     
SELECT * FROM WORKER;
SELECT FIRST_NAME , SALARY FROM WORKER;

-- SELECT
SELECT 44+11;
SELECT now();
SELECT lcase("ARNAV");

-- WHERE
SELECT * FROM WORKER WHERE SALARY > 100000;
SELECT * FROM WORKER WHERE DEPARTMENT = 'FINANCE';

-- BETWEEN & AND 
SELECT * FROM WORKER WHERE SALARY BETWEEN 50000 AND 100000;

-- REDUCE OR STATEMENTS
-- OR 
SELECT * FROM WORKER WHERE DEPARTMENT = 'FINANCE' OR DEPARTMENT = 'IT';

-- BETTER WAY TO USE IN COMMAND INREPLACE OF OR COMMAND
-- IN 
SELECT * FROM WORKER WHERE DEPARTMENT IN ('FINANCE','IT');

-- NOT IN 
SELECT * FROM WORKER WHERE DEPARTMENT NOT IN ('FINANCE','IT');


-- PATTERN SEARCHING // WILDCARD USING LIKE KEYWORD
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%R%';
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '_R%';



-- SORTING USING ORDER BY 
SELECT * FROM WORKER ORDER BY SALARY;
SELECT * FROM WORKER ORDER BY SALARY DESC;
SELECT * FROM WORKER ORDER BY SALARY ASC;


-- EXTRACT DISTINCT VALUES USING DISTINCT KEYWORD
SELECT DISTINCT DEPARTMENT FROM WORKER;
SELECT DEPARTMENT FROM WORKER GROUP BY DEPARTMENT;

-- DATA GROUPING USING GROUP BY KEYWORD WITH AGGREGRATION
-- FIND NO OF EMPLOYEES WORKING IN EVERY DEPARTMENT
SELECT DEPARTMENT,COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT;

-- AVERAGE SALARY PER DEPARTMENT
SELECT DEPARTMENT,AVG(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- MINIMUM SALARY PER DEPARTMENT
SELECT DEPARTMENT,MIN(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- MAXIMUM SALARY PER DEPARTMENT
SELECT DEPARTMENT,MAX(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- TOTAL SALARY PER DEPARTMENT
SELECT DEPARTMENT,SUM(SALARY) FROM WORKER GROUP BY DEPARTMENT;

-- GROUP BY HAVING 
-- FIND MORE THAN 1 NO OF EMPLOYEES WORKING IN EVERY DEPARTMENT
SELECT DEPARTMENT,COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT HAVING COUNT(DEPARTMENT)>1;






-- 2. DLL COMMANDS (CONSTRAINTS)



-- 1. PRIMARY KEY USED IN TABLE WORKER 
-- 2. FOREIGN KEY USED IN TABLE BONUS
-- 3. DEFAULT CONSTRAINT (DURING CREATION OF TABLE MARK DEFAULT WITH ANY VALUE);
-- 4. CHECK CONSTRAINT
-- EXAMPLE OF CHECK CONSTRAINT
INSERT INTO WORKER
      (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
      (011,'ATMKJFGH','OK',1000,'11-01-25 09:55:18', 'FINANCE');


-- ALTER OPEARTIONS (CHANGES SCHEMA)

-- 5. ADD NEW COLUMN IN WORKER TABLE 
ALTER TABLE WORKER ADD AGE INT NOT NULL DEFAULT 18;

-- 6. MODIFY (CHANGE DATATYPE OF ATTRIBUTE)
ALTER TABLE WORKER MODIFY SALARY DOUBLE NOT NULL;
INSERT INTO WORKER
      (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
      (011,'ATMKJFGH','OK',500000.5,'11-01-25 09:55:18', 'FINANCE');
DESC WORKER; -- DESCRIBE DATATYPE OF WORKER TABLE

-- 7. COLUMN NAME (CHANGE COLUMN NAME)
-- ALTER TABLE table-name CHANGE COLUMN old-col-name new-col-name new-col-datatype;
ALTER TABLE WORKER CHANGE COLUMN AGE MINAGE INT ;
DESC WORKER;

-- 8. DROP COLUMN 
ALTER TABLE WORKER DROP COLUMN JOINING_DATE;

-- 9. RENAME COLUMN 
-- ALTER TABLE table-name RENAME TO new-table-name



-- 3. DATA MODIFICATION LANGUAGE (DML)

-- A. INSERT 

-- B. UPDATE

-- SINGLE UPDATE
UPDATE WORKER SET FIRST_NAME='MONIKA' , LAST_NAME='PATHAK' WHERE WORKER_ID=002;

-- MULTIPLE UPDATES
SET SQL_SAFE_UPDATES=1;
UPDATE WORKER SET SALARY=500000;

-- C. DELETE

-- DELETE SINGLE TUPLE
DELETE FROM WORKER WHERE WORKER_ID=011;
DELETE FROM WORKER; -- DELETE ALL ENTRIES


-- D. REPLACE 
-- UPDATE AND SET NULL
REPLACE INTO WORKER (WORKER_ID,FIRST_NAME,SALARY)
 VALUES (003,'LAVI',400000);

-- BEHAVE AS A INSERT
REPLACE INTO WORKER (WORKER_ID,FIRST_NAME,SALARY)
 VALUES (011,'PART2',400000);




SELECT * FROM WORKER;

